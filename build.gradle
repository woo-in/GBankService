plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'G'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// 스프링 부트 스타터
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'


	// 테스트 코드
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Spring core context (DI/IoC)
	implementation 'org.springframework:spring-context'

	// Spring boot 기반 AOP
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.aspectj:aspectjrt:1.9.24' // @Aspect 를 위해 명시적으로 추가

	// Spring JDBC
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	// Tomcat JDBC Connection Pool
	implementation 'org.apache.tomcat:tomcat-jdbc:10.1.19'
	// Mysql JDBC Driver (최신 안정 버전)
	implementation 'com.mysql:mysql-connector-j'

	// Web(MVC) , 타입립스
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// 로그 출력
	implementation 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	// Bean validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// spring security
	testImplementation 'org.springframework.security:spring-security-test'

	// API 호출
	// 주의 : 비동기/논블로킹
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

}

tasks.named('test') {
	useJUnitPlatform()
}